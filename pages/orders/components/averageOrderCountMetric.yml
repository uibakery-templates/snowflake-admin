id: '16998708671540.03168846208751419'
definitionId: metric
parentSlotId: '16995304860770.38053567007882494'
styles:
  xl:
    gridItem:
      x: 5
      y: 82
      w: 7
      h: 43
  xs:
    gridItem:
      x: 11
      y: 102
      w: 13
      h: 27
properties:
  data: >-
    const customerOrders = Object.groupBy({{actions.loadOrders.data}}, ({
    CUSTOMER_ID }) => CUSTOMER_ID);


    return {{actions.loadCustomers.data}}.map(({ CUSTOMER_ID }) => ({
    CUSTOMER_ID, orderCount: customerOrders[CUSTOMER_ID]?.length ?? 0 }));
  name: averageOrderCountMetric
  __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
    - xl
    - xs
  title: Average order count by customer
  operation: avg
  groupType: not_group
  showLoading:
    value: false
    dataValue: '{{actions.loadOrders.loading}} || {{actions.loadCustomers.loading}}'
    withData: true
actions: {}
slots:
  - id: '16998708671540.9537097656717755'
    name: metricField
    children:
      - id: '17011916998920.7446868955983543'
        definitionId: atomicNumber
        parentSlotId: '16998708671540.9537097656717755'
        styles: {}
        properties:
          name: atomicNumber5
          prop: orderCount
          primaryKey: true
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          fraction: 3
        index: 0
        slots: []
  - id: '16998708671540.2819730882000886'
    name: additionalField
    children: []
  - id: '16998708672790.6415284479411556'
    name: groupByField
    children: []
